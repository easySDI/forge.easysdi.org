{
    "issue": {
        "closed": false,
        "title": "Catalog CSW filter can be wrong depending on configuration",
        "created_at": "2015-10-01T13:18:20Z",
        "labels": [
            "Defect",
            "Redmine status : New",
            "Category : CATALOG"
        ],
        "body": "**Original author :** Blatti Yves\n\nCatalog CSW filter can be wrong (xsd validation fails) depending on configuration:\r\n\r\n## Example 1:\r\n\r\nIf the configured catalog has one (and only one) resource type specified, the output filter will contain:\r\n```\n\r\n<code class=\"xml\">\r\n                [...]\r\n                <ogc:PropertyIsEqualTo>\r\n                  <ogc:PropertyName>harvested<\/ogc:PropertyName>\r\n                  <ogc:Literal>false<\/ogc:Literal>\r\n                <\/ogc:PropertyIsEqualTo>\r\n                <ogc:Or>\r\n                  <ogc:PropertyIsEqualTo>\r\n                    <ogc:PropertyName>resourcetype<\/ogc:PropertyName>\r\n                    <ogc:Literal>geoproduit<\/ogc:Literal>\r\n                  <\/ogc:PropertyIsEqualTo>\r\n                <\/ogc:Or>\r\n                <ogc:PropertyIsEqualTo>\r\n                  <ogc:PropertyName>metadatastate<\/ogc:PropertyName>\r\n                  <ogc:Literal>published<\/ogc:Literal>\r\n                <\/ogc:PropertyIsEqualTo>\r\n                [...]\r\n\r\n```\n\r\n\r\nYou can see an @ogc:Or@ element containing only one element.\r\n\r\n## Example 2:\r\n\r\nThe filter contains a 'top level' @ogc:And@ for any catalog level filter. If it is empy, the @ogc:And@ contains only one element @ogc:And@.\r\n\r\n## Reason :\r\n\r\nhttp:\/\/schemas.opengis.net\/filter\/1.1.0\/filter.xsd\r\n\r\n```\n\r\n<code class=\"xml\">\r\n   [...]\r\n   <xsd:element name=\"logicOps\" type=\"ogc:LogicOpsType\" abstract=\"true\"\/>\r\n   <xsd:element name=\"And\"\r\n                type=\"ogc:BinaryLogicOpType\"\r\n                substitutionGroup=\"ogc:logicOps\"\/>\r\n   <xsd:element name=\"Or\"\r\n                type=\"ogc:BinaryLogicOpType\"\r\n                substitutionGroup=\"ogc:logicOps\"\/>\r\n   [...]\r\n   <xsd:complexType name=\"BinaryLogicOpType\">\r\n      <xsd:complexContent>\r\n         <xsd:extension base=\"ogc:LogicOpsType\">\r\n            <xsd:choice minOccurs=\"2\" maxOccurs=\"unbounded\">\r\n               <xsd:element ref=\"ogc:comparisonOps\"\/>\r\n               <xsd:element ref=\"ogc:spatialOps\"\/>\r\n               <xsd:element ref=\"ogc:logicOps\"\/>\r\n            <\/xsd:choice>\r\n         <\/xsd:extension>\r\n      <\/xsd:complexContent>\r\n   <\/xsd:complexType>\r\n   [...]\r\n\r\n```\n\r\n\r\n@ogc:And@ and @ocg:or@ are BinaryLogicOpType and have ton contain at least 2 elements of type : @ogc:comparisonOps@, @ogc:spatialOps@ or @ogc:logicOps@\r\n\r\n## Solution :\r\n\r\nAny BinaryLogicOp element (or\/and) should be dropped if it only contains one element, and its content should be placed in the direct parent.\r\n"
    },
    "comments": []
}