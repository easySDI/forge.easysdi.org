{"issue":{"id":943,"project":{"id":16,"name":"easySDI"},"tracker":{"id":3,"name":"Enhancement"},"status":{"id":10,"name":"Closed"},"priority":{"id":5,"name":"High"},"author":{"id":383,"name":"Blatti Yves"},"category":{"id":20,"name":"SHOP"},"fixed_version":{"id":176,"name":"4.3.2"},"subject":"Enhance perimeter selection in SHOP for better User Experience","description":"h1. Target\r\n\r\nIn easySDI workshop in February 2013, we designed the desired SHOP perimeter definition UX.\r\nEverything has not been implemented yet, this enhancement is proposed to complete the shop behavior as initially designed.\r\n\r\nBig lines are:\r\n* Allow free perimeter modification after drawing\r\n* Add informations about selected perimeter (WFS)\r\n* Avoid loosing selected perimeters by re-implementing v2 logic for WFS\r\n* Have an 'implicit' pan policy and remove pan button\r\n\r\n\r\n\r\n\r\nh1. Allow free perimeter modification after drawing\r\n\r\nIn V2 we had the ability to edit a free perimeter once it has been drawn. But it was implemented as a specific control.\r\nIn 2013 workshop, we proposed *'combined tools'* that 'onClick' go for new drawing, and once the drawing is done the feature becomes editable (the button returns to normal state/deselected).\r\nTo start again and clear the drawn perimeter, user has to select the tool again.\r\n\r\nHere is how it should work:\r\n\r\nh2. Rectangle / Box tool\r\n\r\n*\"See this logic in action HERE\":http://asitvd.ch/index.php?option=com_easysdi_catalog&view=search&context=RESEAUX&bboxMinX=-180&bboxMinY=-90&bboxMaxX=180&bboxMaxY=90&Itemid=153&lang=fr&tabIndex=&defaultSearch=0&limit=20&limitstart=0&tabIndex=&simulatedTabIndex=&advancedSrch=0&systemfilter_257defa5-1d43-4e25-bcd0-b9a38441e370=15104ce0-ae26-11e1-8497-d00d4e2a08cb (in the mini map, use rectangle for example)*\r\n\r\nWhen clicking on the rectangle tool, we enter in 'draw mode'. Then we 'drag and draw the rectangle'.\r\n\r\n!rectangle_step1_draw.png!\r\n\r\nWhen the click is released, and the rectangle created, we automatically toggle in 'edit mode'.\r\n(The button is now is normal state, not activated, but the feature is editable)\r\nIn edit mode, the rectangle has:\r\n* 4 edit handles in corners\r\n!rectangle_step2_edit1.png!\r\n* 4 edit handles in sides\r\n!rectangle_step2_edit2.png.png!\r\n* 1 rotate handle on the bottom right corner. Shifted outside of the rectangle.\r\n!rectangle_step2_edit3.png!\r\n\r\nThe rectangle can also be dragged (moved) by clicking it's inside surface:\r\n!rectangle_step2_edit4.png!\r\n\r\nh2. Avoid '1 pixel rectangle'\r\n\r\nThere is a problem with the actual rectangle tool: it is possible to accidentally draw a '1x1 px' by clicking the map without moving the mouse, caused by:\r\n - Human hand failure : clicked accidentally\r\n - Misinterpretation : the user wants to draw a rectangle with 2 clicks (without dragging)\r\n\r\nAs the rectangle tool will offer edit capabilities, we propose to add the following feature to avoid 'pixel sized' rectangles:\r\n - If the drawn rectangle is smaller than <min_surface_to_be_defined_in_shop_backend> then draw a square.\r\n - The square is centered on the tiny 'failed' rectangle, and it's sides length is defined in backed.\r\n - This DOES NOT force a minimum size ! If the user really wants a small rectangle, he can resize it. This behavior is active in 'draw mode' not in 'edit mode'.\r\n\r\n\"Try it here\":http://asitvd.ch/index.php?option=com_easysdi_catalog&view=search&context=RESEAUX&bboxMinX=-180&bboxMinY=-90&bboxMaxX=180&bboxMaxY=90&Itemid=153&lang=fr&tabIndex=&defaultSearch=0&limit=20&limitstart=0&tabIndex=&simulatedTabIndex=&advancedSrch=0&systemfilter_257defa5-1d43-4e25-bcd0-b9a38441e370=15104ce0-ae26-11e1-8497-d00d4e2a08cb*\r\n\r\n\r\nh2. Polygon tool\r\n\r\nThe polygon tool features the same logic:\r\nOn first click we enter in 'draw mode', then draw the polygon point by point (the button is active).\r\nThe polygon is closed on double-click. After completion, we pass in edit mode automatically (the polygon button is now back to normal state).\r\n\r\nHere is how it goes:\r\n\r\nClick on polygon tool, and start adding points (same as in today's v4):\r\n!polygon_step1_draw.png!\r\nDouble click to close:\r\n!polygon_step2_close.png!\r\nThe polygon now goes into edit mode:\r\n!polygon_step2_closed.png!\r\n\r\nIt offers:\r\n* Handles on every vertice than can be moved:\r\n!polygon_step3_edit_move_vertice.png!\r\n* Handle on every line center to add a vertice by dragging:\r\n!polygon_step3_edit_add_vertice1.png! !polygon_step3_edit_add_vertice2.png!\r\n\r\nNote: the polygon cannot be moved (dragged) nor rotated.\r\n\r\n\r\nh2. Keep the free perimeter editable !\r\n\r\nThe free perimeter has to be editable (rectangle and polygon) even if:\r\n- The user has saved the perimeter, and the re-opens the popup\r\n- The user has saved the perimeter and left the basket (browse the rest of the site, and come back later to the basket)\r\n- The user has made a copy of the order\r\n- The user has saved the order as draft and reuses it\r\n\r\nThant means that we need to *save the tool used* for free perimeter (polygon or rectangle) in  session (current basket), and database (copy or draft) !\r\n\r\n\r\n\r\n\r\nh1. Add informations about selected perimeter (WFS)\r\n\r\nIn V2 we had instant view on how many WFS items we have selected, and this is important for users ordering tons of parcels.\r\nWe propose to add it in a discrete way in the interface: a bootstrap appended counter with a tooltip.\r\n\r\nThe counter will be visible only when the tool is selected.\r\nWhen the tool is selected, the counter appears with a 0 value, and the increments with selections.\r\nA tool tip indicates the selected values.\r\n\r\nSee here: !wfs_counter.png! and on hover with tooltip !wfs_counter_tooltip_hover.png!\r\n\r\n\r\n\r\nh1. Avoid loosing selected perimeters by re-implementing v2 logic for WFS\r\n\r\nMultiple WFS perimeters selection has been implemented in easySDI V4 with a CTRL+Clic logic.\r\nProblem is: if you miss or forget your CTRL key, you loose your selection. The problem is more likely to happen if you have set a selection and the re-open the popup to select more features.\r\n\r\nIn V2 the implementation was different: click to add, then click to remove. This logic is less risky, you can lose one selected feature at a time max.\r\nPlus: it's easier to understand by users.\r\nWe propose to re-implement it this way in V4.\r\n\r\nSame as for free perimeter, a user should be able to edit the perimeter of a saved or copied order (may be working is v4, I have not tested it)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nh1. Have an 'implicit' pan policy and remove pan button.\r\n\r\nPan should not be a button, but should be always working if possible.\r\n\r\nOn first popup opening, there is no tool selected. And pan is active (but not visible as a button).\r\nWhen the user selects a tool, pan should still be active (except for rectangle/box as it's a drag and draw control).\r\n\r\nHere is the *\"pan availlable\"* matrix with different tools:\r\n|_.Tool     |_\\3=.Action|\r\n|           |_.Draw|_.Edit |_.Select   |\r\n|_.Rectangle|=. no |=. yes (todo) |=. - |\r\n|_.Polygon  |=. yes(existing) |=. yes (todo) |=. -|\r\n|_.WFS      |=. - |=. - |=. yes (existing)|\r\n\r\n","start_date":"2015-03-20","done_ratio":100,"custom_fields":[{"id":3,"name":"Sponsor","multiple":true,"value":[]},{"id":4,"name":"Functional impact"},{"id":5,"name":"Ergonomic impact"}],"created_on":"2015-03-20T09:28:51Z","updated_on":"2015-06-15T13:55:29Z","closed_on":"2015-06-15T13:52:46Z","journals":[{"id":5096,"user":{"id":383,"name":"Blatti Yves"},"notes":"","created_on":"2015-03-20T09:29:00Z","details":[{"property":"attachment","name":"841","old_value":"wfs_counter_tooltip.png"}]},{"id":5097,"user":{"id":383,"name":"Blatti Yves"},"notes":"files","created_on":"2015-03-20T09:29:58Z","details":[{"property":"attachment","name":"850","new_value":"polygon_step2_closed.png"},{"property":"attachment","name":"851","new_value":"polygon_step3_edit_add_vertice1.png.png"},{"property":"attachment","name":"852","new_value":"polygon_step3_edit_add_vertice2.png.png"},{"property":"attachment","name":"853","new_value":"polygon_step3_edit_move_vertice.png"}]},{"id":5098,"user":{"id":383,"name":"Blatti Yves"},"notes":"Complete description","created_on":"2015-03-20T09:51:34Z","details":[{"property":"attachment","name":"854","new_value":"polygon_step3_edit_add_vertice1.png"},{"property":"attachment","name":"855","new_value":"polygon_step3_edit_add_vertice2.png"},{"property":"attr","name":"description","old_value":"h1. Target\r\n\r\nIn easySDI workshop in February 2013, we designed the desired SHOP perimeter definition UX.\r\nEverything has not been implemented yet, this enhancement is proposed to complete the shop behavior as initially designed.\r\n\r\nBig lines are:\r\n* Allow free perimeter modification after drawing\r\n* Add informations about selected perimeter (WFS)\r\n* Avoid loosing selected perimeters by re-implementing v2 logic for WFS\r\n* Have an 'implicit' pan policy and remove pan button\r\n\r\n\r\n\r\n\r\nh1. Allow free perimeter modification after drawing\r\n\r\nIn V2 we had the ability to edit a free perimeter once it has been drawn. But it was implemented as a specific control.\r\nIn 2013 workshop, we proposed *'combined tools'* that onClick go for new drawing, then stay active for perimeter modification.\r\nHere is how it should work:\r\n\r\nh2. Rectangle / Box tool\r\n\r\n*\"See this logic in action HERE\":http://asitvd.ch/index.php?option=com_easysdi_catalog&view=search&context=RESEAUX&bboxMinX=-180&bboxMinY=-90&bboxMaxX=180&bboxMaxY=90&Itemid=153&lang=fr&tabIndex=&defaultSearch=0&limit=20&limitstart=0&tabIndex=&simulatedTabIndex=&advancedSrch=0&systemfilter_257defa5-1d43-4e25-bcd0-b9a38441e370=15104ce0-ae26-11e1-8497-d00d4e2a08cb (in the mini map, use rectangle for example)*\r\n\r\nWhen clicking on the rectangle tool, we enter in 'draw mode'. Then we 'drag and draw the rectangle'.\r\n\r\n!rectangle_step1_draw.png!\r\n\r\nWhen the click is released, and the rectangle created, we automatically toggle in 'edit mode'.\r\nIn edit mode, the rectangle has:\r\n* 4 edit handles in corners\r\n!rectangle_step2_edit1.png!\r\n* 4 edit handles in sides\r\n!rectangle_step2_edit2.png.png!\r\n* 1 rotate handle on the bottom right corner. Shifted outside of the rectangle.\r\n!rectangle_step2_edit3.png!\r\n\r\nThe rectangle can also be dragged (moved) by clicking it's inside surface:\r\n!rectangle_step2_edit4.png!\r\n\r\n\r\n\r\n\r\nh2. Polygon tool\r\n\r\nThe polygon tool features the same logic:\r\nOn first click we enter in 'draw mode', then draw the polygon point by point. The polygon is closed on double-click. After competition, we pass in edit mode automatically.\r\n\r\nHere is how it goes:\r\n\r\nClick on polygon tool, and start adding points (same as in today's v4):\r\n\r\n!!\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nh1. Add informations about selected perimeter (WFS)\r\n\r\nIn V2 we had instant view on how many WFS items we have selected, and this is important for users ordering tons of parcels.\r\nWe propose to add it in a discrete way in the interface: a bootstrap appended counter with a tool tip.\r\nSee here: !wfs_counter.png! and on hover with tooltip !wfs_counter_tooltip_hover.png!\r\n\r\nThe counter will be visible only when the tool is selected. When the tool is selected, the counter appears with a 0 value, and the increments with selections.\r\n\r\n\r\n\r\n\r\n\r\n\r\nh1. Avoid loosing selected perimeters by re-implementing v2 logic for WFS\r\n\r\nMultiple WFS perimeters selection has been implemented in easySDI V4 with a CTRL+Clic logic.\r\nProblem is: if you miss or forget your CTRL key, you loose your selection. The problem is more likely to happen if you have set a selection and the re-open the popup to select more features.\r\n\r\nIn V2 the implementation was different: clic to add, then click to remove. This logic is less risky, you can lose one selected feature at a time max.\r\nPlus: it's easier to understand by users.\r\nWe propose to re-implement it this way in V4.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nh1. Have an 'implicit' pan policy and remove pan button.\r\n\r\nPan should not be a button, but should be always working if possible.\r\n\r\nOn first popup opening, there is no tool selected. And pan is active (but not visible as a button).\r\nWhen the user selects a tool, pan should still be active (except for rectangle/box as it's a drag and draw control).\r\n\r\nHere is the *\"pan availlable\"* matrix with different tools:\r\n|_.Tool     |_\\3=.Action|\r\n|           |_.Draw|_.Edit |_.Select   |\r\n|_.Rectangle|=. no |=. yes (todo) |=. - |\r\n|_.Polygon  |=. yes(existing) |=. yes (todo) |=. -|\r\n|_.WFS      |=. - |=. - |=. yes (existing)|\r\n\r\nh1. HTML mockup\r\n\r\n","new_value":"h1. Target\r\n\r\nIn easySDI workshop in February 2013, we designed the desired SHOP perimeter definition UX.\r\nEverything has not been implemented yet, this enhancement is proposed to complete the shop behavior as initially designed.\r\n\r\nBig lines are:\r\n* Allow free perimeter modification after drawing\r\n* Add informations about selected perimeter (WFS)\r\n* Avoid loosing selected perimeters by re-implementing v2 logic for WFS\r\n* Have an 'implicit' pan policy and remove pan button\r\n\r\n\r\n\r\n\r\nh1. Allow free perimeter modification after drawing\r\n\r\nIn V2 we had the ability to edit a free perimeter once it has been drawn. But it was implemented as a specific control.\r\nIn 2013 workshop, we proposed *'combined tools'* that onClick go for new drawing, then stay active for perimeter modification.\r\nHere is how it should work:\r\n\r\nh2. Rectangle / Box tool\r\n\r\n*\"See this logic in action HERE\":http://asitvd.ch/index.php?option=com_easysdi_catalog&view=search&context=RESEAUX&bboxMinX=-180&bboxMinY=-90&bboxMaxX=180&bboxMaxY=90&Itemid=153&lang=fr&tabIndex=&defaultSearch=0&limit=20&limitstart=0&tabIndex=&simulatedTabIndex=&advancedSrch=0&systemfilter_257defa5-1d43-4e25-bcd0-b9a38441e370=15104ce0-ae26-11e1-8497-d00d4e2a08cb (in the mini map, use rectangle for example)*\r\n\r\nWhen clicking on the rectangle tool, we enter in 'draw mode'. Then we 'drag and draw the rectangle'.\r\n\r\n!rectangle_step1_draw.png!\r\n\r\nWhen the click is released, and the rectangle created, we automatically toggle in 'edit mode'.\r\nIn edit mode, the rectangle has:\r\n* 4 edit handles in corners\r\n!rectangle_step2_edit1.png!\r\n* 4 edit handles in sides\r\n!rectangle_step2_edit2.png.png!\r\n* 1 rotate handle on the bottom right corner. Shifted outside of the rectangle.\r\n!rectangle_step2_edit3.png!\r\n\r\nThe rectangle can also be dragged (moved) by clicking it's inside surface:\r\n!rectangle_step2_edit4.png!\r\n\r\nh2. Avoid '1 pixel rectangle'\r\n\r\nThere is a problem with the actual rectangle tool: it is possible to accidentally draw a '1x1 px' by clicking the map without moving the mouse, caused by:\r\n - Human hand failure : clicked accidentally\r\n - Misinterpretation : the user want to draw a rectangle with 2 clicks (without dragging)\r\n\r\nAs the rectangle tool will offer edit capabilities, we propose to add the following feature to avoid 'pixel sized' rectangles:\r\n - If the drawn rectangle is smaller than <min_surface_to_be_defined_in_shop_backend> then draw a square.\r\n - The square is centered on the tiny 'failed' rectangle, and it's sides length is defined in backed.\r\n - This DOES NOT force a minimum size ! If the user really wants a small rectangle, he can resize it. This behavior is on 'onDraw' not 'onEdit'\r\n\r\n\"Try it here\":http://asitvd.ch/index.php?option=com_easysdi_catalog&view=search&context=RESEAUX&bboxMinX=-180&bboxMinY=-90&bboxMaxX=180&bboxMaxY=90&Itemid=153&lang=fr&tabIndex=&defaultSearch=0&limit=20&limitstart=0&tabIndex=&simulatedTabIndex=&advancedSrch=0&systemfilter_257defa5-1d43-4e25-bcd0-b9a38441e370=15104ce0-ae26-11e1-8497-d00d4e2a08cb*\r\n\r\n\r\nh2. Polygon tool\r\n\r\nThe polygon tool features the same logic:\r\nOn first click we enter in 'draw mode', then draw the polygon point by point. The polygon is closed on double-click. After competition, we pass in edit mode automatically.\r\n\r\nHere is how it goes:\r\n\r\nClick on polygon tool, and start adding points (same as in today's v4):\r\n!polygon_step1_draw.png!\r\nDouble click to close:\r\n!polygon_step2_close.png!\r\nThe polygon now goes into edit mode:\r\n!polygon_step2_closed.png!\r\n\r\nIt offers:\r\n* Handles on every vertice than can be moved:\r\n!polygon_step3_edit_move_vertice.png!\r\n* Handle on every line center to add a vertice by dragging:\r\n!polygon_step3_edit_add_vertice1.png! !polygon_step3_edit_add_vertice2.png!\r\n\r\nNote: the polygon cannot be moved (dragged) nor rotated.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nh1. Add informations about selected perimeter (WFS)\r\n\r\nIn V2 we had instant view on how many WFS items we have selected, and this is important for users ordering tons of parcels.\r\nWe propose to add it in a discrete way in the interface: a bootstrap appended counter with a tool tip.\r\nSee here: !wfs_counter.png! and on hover with tooltip !wfs_counter_tooltip_hover.png!\r\n\r\nThe counter will be visible only when the tool is selected. When the tool is selected, the counter appears with a 0 value, and the increments with selections.\r\n\r\n\r\n\r\n\r\n\r\n\r\nh1. Avoid loosing selected perimeters by re-implementing v2 logic for WFS\r\n\r\nMultiple WFS perimeters selection has been implemented in easySDI V4 with a CTRL+Clic logic.\r\nProblem is: if you miss or forget your CTRL key, you loose your selection. The problem is more likely to happen if you have set a selection and the re-open the popup to select more features.\r\n\r\nIn V2 the implementation was different: clic to add, then click to remove. This logic is less risky, you can lose one selected feature at a time max.\r\nPlus: it's easier to understand by users.\r\nWe propose to re-implement it this way in V4.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nh1. Have an 'implicit' pan policy and remove pan button.\r\n\r\nPan should not be a button, but should be always working if possible.\r\n\r\nOn first popup opening, there is no tool selected. And pan is active (but not visible as a button).\r\nWhen the user selects a tool, pan should still be active (except for rectangle/box as it's a drag and draw control).\r\n\r\nHere is the *\"pan availlable\"* matrix with different tools:\r\n|_.Tool     |_\\3=.Action|\r\n|           |_.Draw|_.Edit |_.Select   |\r\n|_.Rectangle|=. no |=. yes (todo) |=. - |\r\n|_.Polygon  |=. yes(existing) |=. yes (todo) |=. -|\r\n|_.WFS      |=. - |=. - |=. yes (existing)|\r\n\r\nh1. HTML mockup\r\n\r\n"}]},{"id":5099,"user":{"id":383,"name":"Blatti Yves"},"notes":"","created_on":"2015-03-20T10:34:49Z","details":[{"property":"attr","name":"description","old_value":"h1. Target\r\n\r\nIn easySDI workshop in February 2013, we designed the desired SHOP perimeter definition UX.\r\nEverything has not been implemented yet, this enhancement is proposed to complete the shop behavior as initially designed.\r\n\r\nBig lines are:\r\n* Allow free perimeter modification after drawing\r\n* Add informations about selected perimeter (WFS)\r\n* Avoid loosing selected perimeters by re-implementing v2 logic for WFS\r\n* Have an 'implicit' pan policy and remove pan button\r\n\r\n\r\n\r\n\r\nh1. Allow free perimeter modification after drawing\r\n\r\nIn V2 we had the ability to edit a free perimeter once it has been drawn. But it was implemented as a specific control.\r\nIn 2013 workshop, we proposed *'combined tools'* that onClick go for new drawing, then stay active for perimeter modification.\r\nHere is how it should work:\r\n\r\nh2. Rectangle / Box tool\r\n\r\n*\"See this logic in action HERE\":http://asitvd.ch/index.php?option=com_easysdi_catalog&view=search&context=RESEAUX&bboxMinX=-180&bboxMinY=-90&bboxMaxX=180&bboxMaxY=90&Itemid=153&lang=fr&tabIndex=&defaultSearch=0&limit=20&limitstart=0&tabIndex=&simulatedTabIndex=&advancedSrch=0&systemfilter_257defa5-1d43-4e25-bcd0-b9a38441e370=15104ce0-ae26-11e1-8497-d00d4e2a08cb (in the mini map, use rectangle for example)*\r\n\r\nWhen clicking on the rectangle tool, we enter in 'draw mode'. Then we 'drag and draw the rectangle'.\r\n\r\n!rectangle_step1_draw.png!\r\n\r\nWhen the click is released, and the rectangle created, we automatically toggle in 'edit mode'.\r\nIn edit mode, the rectangle has:\r\n* 4 edit handles in corners\r\n!rectangle_step2_edit1.png!\r\n* 4 edit handles in sides\r\n!rectangle_step2_edit2.png.png!\r\n* 1 rotate handle on the bottom right corner. Shifted outside of the rectangle.\r\n!rectangle_step2_edit3.png!\r\n\r\nThe rectangle can also be dragged (moved) by clicking it's inside surface:\r\n!rectangle_step2_edit4.png!\r\n\r\nh2. Avoid '1 pixel rectangle'\r\n\r\nThere is a problem with the actual rectangle tool: it is possible to accidentally draw a '1x1 px' by clicking the map without moving the mouse, caused by:\r\n - Human hand failure : clicked accidentally\r\n - Misinterpretation : the user want to draw a rectangle with 2 clicks (without dragging)\r\n\r\nAs the rectangle tool will offer edit capabilities, we propose to add the following feature to avoid 'pixel sized' rectangles:\r\n - If the drawn rectangle is smaller than <min_surface_to_be_defined_in_shop_backend> then draw a square.\r\n - The square is centered on the tiny 'failed' rectangle, and it's sides length is defined in backed.\r\n - This DOES NOT force a minimum size ! If the user really wants a small rectangle, he can resize it. This behavior is on 'onDraw' not 'onEdit'\r\n\r\n\"Try it here\":http://asitvd.ch/index.php?option=com_easysdi_catalog&view=search&context=RESEAUX&bboxMinX=-180&bboxMinY=-90&bboxMaxX=180&bboxMaxY=90&Itemid=153&lang=fr&tabIndex=&defaultSearch=0&limit=20&limitstart=0&tabIndex=&simulatedTabIndex=&advancedSrch=0&systemfilter_257defa5-1d43-4e25-bcd0-b9a38441e370=15104ce0-ae26-11e1-8497-d00d4e2a08cb*\r\n\r\n\r\nh2. Polygon tool\r\n\r\nThe polygon tool features the same logic:\r\nOn first click we enter in 'draw mode', then draw the polygon point by point. The polygon is closed on double-click. After competition, we pass in edit mode automatically.\r\n\r\nHere is how it goes:\r\n\r\nClick on polygon tool, and start adding points (same as in today's v4):\r\n!polygon_step1_draw.png!\r\nDouble click to close:\r\n!polygon_step2_close.png!\r\nThe polygon now goes into edit mode:\r\n!polygon_step2_closed.png!\r\n\r\nIt offers:\r\n* Handles on every vertice than can be moved:\r\n!polygon_step3_edit_move_vertice.png!\r\n* Handle on every line center to add a vertice by dragging:\r\n!polygon_step3_edit_add_vertice1.png! !polygon_step3_edit_add_vertice2.png!\r\n\r\nNote: the polygon cannot be moved (dragged) nor rotated.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nh1. Add informations about selected perimeter (WFS)\r\n\r\nIn V2 we had instant view on how many WFS items we have selected, and this is important for users ordering tons of parcels.\r\nWe propose to add it in a discrete way in the interface: a bootstrap appended counter with a tool tip.\r\nSee here: !wfs_counter.png! and on hover with tooltip !wfs_counter_tooltip_hover.png!\r\n\r\nThe counter will be visible only when the tool is selected. When the tool is selected, the counter appears with a 0 value, and the increments with selections.\r\n\r\n\r\n\r\n\r\n\r\n\r\nh1. Avoid loosing selected perimeters by re-implementing v2 logic for WFS\r\n\r\nMultiple WFS perimeters selection has been implemented in easySDI V4 with a CTRL+Clic logic.\r\nProblem is: if you miss or forget your CTRL key, you loose your selection. The problem is more likely to happen if you have set a selection and the re-open the popup to select more features.\r\n\r\nIn V2 the implementation was different: clic to add, then click to remove. This logic is less risky, you can lose one selected feature at a time max.\r\nPlus: it's easier to understand by users.\r\nWe propose to re-implement it this way in V4.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nh1. Have an 'implicit' pan policy and remove pan button.\r\n\r\nPan should not be a button, but should be always working if possible.\r\n\r\nOn first popup opening, there is no tool selected. And pan is active (but not visible as a button).\r\nWhen the user selects a tool, pan should still be active (except for rectangle/box as it's a drag and draw control).\r\n\r\nHere is the *\"pan availlable\"* matrix with different tools:\r\n|_.Tool     |_\\3=.Action|\r\n|           |_.Draw|_.Edit |_.Select   |\r\n|_.Rectangle|=. no |=. yes (todo) |=. - |\r\n|_.Polygon  |=. yes(existing) |=. yes (todo) |=. -|\r\n|_.WFS      |=. - |=. - |=. yes (existing)|\r\n\r\nh1. HTML mockup\r\n\r\n","new_value":"h1. Target\r\n\r\nIn easySDI workshop in February 2013, we designed the desired SHOP perimeter definition UX.\r\nEverything has not been implemented yet, this enhancement is proposed to complete the shop behavior as initially designed.\r\n\r\nBig lines are:\r\n* Allow free perimeter modification after drawing\r\n* Add informations about selected perimeter (WFS)\r\n* Avoid loosing selected perimeters by re-implementing v2 logic for WFS\r\n* Have an 'implicit' pan policy and remove pan button\r\n\r\n\r\n\r\n\r\nh1. Allow free perimeter modification after drawing\r\n\r\nIn V2 we had the ability to edit a free perimeter once it has been drawn. But it was implemented as a specific control.\r\nIn 2013 workshop, we proposed *'combined tools'* that 'onClick' go for new drawing, and once the drawing is done the feature becomes editable (the button returns to normal state/deselected).\r\nTo start again and clear the drawn perimeter, user has to select the tool again.\r\n\r\nHere is how it should work:\r\n\r\nh2. Rectangle / Box tool\r\n\r\n*\"See this logic in action HERE\":http://asitvd.ch/index.php?option=com_easysdi_catalog&view=search&context=RESEAUX&bboxMinX=-180&bboxMinY=-90&bboxMaxX=180&bboxMaxY=90&Itemid=153&lang=fr&tabIndex=&defaultSearch=0&limit=20&limitstart=0&tabIndex=&simulatedTabIndex=&advancedSrch=0&systemfilter_257defa5-1d43-4e25-bcd0-b9a38441e370=15104ce0-ae26-11e1-8497-d00d4e2a08cb (in the mini map, use rectangle for example)*\r\n\r\nWhen clicking on the rectangle tool, we enter in 'draw mode'. Then we 'drag and draw the rectangle'.\r\n\r\n!rectangle_step1_draw.png!\r\n\r\nWhen the click is released, and the rectangle created, we automatically toggle in 'edit mode'.\r\n(The button is now is normal state, not activated, but the feature is editable)\r\nIn edit mode, the rectangle has:\r\n* 4 edit handles in corners\r\n!rectangle_step2_edit1.png!\r\n* 4 edit handles in sides\r\n!rectangle_step2_edit2.png.png!\r\n* 1 rotate handle on the bottom right corner. Shifted outside of the rectangle.\r\n!rectangle_step2_edit3.png!\r\n\r\nThe rectangle can also be dragged (moved) by clicking it's inside surface:\r\n!rectangle_step2_edit4.png!\r\n\r\nh2. Avoid '1 pixel rectangle'\r\n\r\nThere is a problem with the actual rectangle tool: it is possible to accidentally draw a '1x1 px' by clicking the map without moving the mouse, caused by:\r\n - Human hand failure : clicked accidentally\r\n - Misinterpretation : the user wants to draw a rectangle with 2 clicks (without dragging)\r\n\r\nAs the rectangle tool will offer edit capabilities, we propose to add the following feature to avoid 'pixel sized' rectangles:\r\n - If the drawn rectangle is smaller than <min_surface_to_be_defined_in_shop_backend> then draw a square.\r\n - The square is centered on the tiny 'failed' rectangle, and it's sides length is defined in backed.\r\n - This DOES NOT force a minimum size ! If the user really wants a small rectangle, he can resize it. This behavior is active in 'draw mode' not in 'edit mode'.\r\n\r\n\"Try it here\":http://asitvd.ch/index.php?option=com_easysdi_catalog&view=search&context=RESEAUX&bboxMinX=-180&bboxMinY=-90&bboxMaxX=180&bboxMaxY=90&Itemid=153&lang=fr&tabIndex=&defaultSearch=0&limit=20&limitstart=0&tabIndex=&simulatedTabIndex=&advancedSrch=0&systemfilter_257defa5-1d43-4e25-bcd0-b9a38441e370=15104ce0-ae26-11e1-8497-d00d4e2a08cb*\r\n\r\n\r\nh2. Polygon tool\r\n\r\nThe polygon tool features the same logic:\r\nOn first click we enter in 'draw mode', then draw the polygon point by point (the button is active).\r\nThe polygon is closed on double-click. After completion, we pass in edit mode automatically (the polygon button is now back to normal state).\r\n\r\nHere is how it goes:\r\n\r\nClick on polygon tool, and start adding points (same as in today's v4):\r\n!polygon_step1_draw.png!\r\nDouble click to close:\r\n!polygon_step2_close.png!\r\nThe polygon now goes into edit mode:\r\n!polygon_step2_closed.png!\r\n\r\nIt offers:\r\n* Handles on every vertice than can be moved:\r\n!polygon_step3_edit_move_vertice.png!\r\n* Handle on every line center to add a vertice by dragging:\r\n!polygon_step3_edit_add_vertice1.png! !polygon_step3_edit_add_vertice2.png!\r\n\r\nNote: the polygon cannot be moved (dragged) nor rotated.\r\n\r\n\r\nh2. Keep the free perimeter editable !\r\n\r\nThe free perimeter has to be editable (rectangle and polygon) even if:\r\n- The user has saved the perimeter, and the re-opens the popup\r\n- The user has saved the perimeter and left the basket (browse the rest of the site, and come back later to the basket)\r\n- The user has made a copy of the order\r\n- The user has saved the order as draft and reuses it\r\n\r\nThant means that we need to *save the tool used* for free perimeter (polygon or rectangle) in  session (current basket), and database (copy or draft) !\r\n\r\n\r\n\r\n\r\nh1. Add informations about selected perimeter (WFS)\r\n\r\nIn V2 we had instant view on how many WFS items we have selected, and this is important for users ordering tons of parcels.\r\nWe propose to add it in a discrete way in the interface: a bootstrap appended counter with a tooltip.\r\n\r\nThe counter will be visible only when the tool is selected.\r\nWhen the tool is selected, the counter appears with a 0 value, and the increments with selections.\r\nA tool tip indicates the selected values.\r\n\r\nSee here: !wfs_counter.png! and on hover with tooltip !wfs_counter_tooltip_hover.png!\r\n\r\n\r\n\r\nh1. Avoid loosing selected perimeters by re-implementing v2 logic for WFS\r\n\r\nMultiple WFS perimeters selection has been implemented in easySDI V4 with a CTRL+Clic logic.\r\nProblem is: if you miss or forget your CTRL key, you loose your selection. The problem is more likely to happen if you have set a selection and the re-open the popup to select more features.\r\n\r\nIn V2 the implementation was different: click to add, then click to remove. This logic is less risky, you can lose one selected feature at a time max.\r\nPlus: it's easier to understand by users.\r\nWe propose to re-implement it this way in V4.\r\n\r\nSame as for free perimeter, a user should be able to edit the perimeter of a saved or copied order (may be working is v4, I have not tested it)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nh1. Have an 'implicit' pan policy and remove pan button.\r\n\r\nPan should not be a button, but should be always working if possible.\r\n\r\nOn first popup opening, there is no tool selected. And pan is active (but not visible as a button).\r\nWhen the user selects a tool, pan should still be active (except for rectangle/box as it's a drag and draw control).\r\n\r\nHere is the *\"pan availlable\"* matrix with different tools:\r\n|_.Tool     |_\\3=.Action|\r\n|           |_.Draw|_.Edit |_.Select   |\r\n|_.Rectangle|=. no |=. yes (todo) |=. - |\r\n|_.Polygon  |=. yes(existing) |=. yes (todo) |=. -|\r\n|_.WFS      |=. - |=. - |=. yes (existing)|\r\n\r\n"},{"property":"attr","name":"status_id","old_value":"1","new_value":"7"},{"property":"attr","name":"assigned_to_id","new_value":"762"}]},{"id":5100,"user":{"id":383,"name":"Blatti Yves"},"notes":"","created_on":"2015-03-20T10:34:59Z","details":[{"property":"attachment","name":"851","old_value":"polygon_step3_edit_add_vertice1.png.png"}]},{"id":5101,"user":{"id":383,"name":"Blatti Yves"},"notes":"","created_on":"2015-03-20T10:35:09Z","details":[{"property":"attachment","name":"852","old_value":"polygon_step3_edit_add_vertice2.png.png"}]},{"id":5112,"user":{"id":383,"name":"Blatti Yves"},"notes":"","created_on":"2015-03-25T07:45:42Z","details":[{"property":"attr","name":"priority_id","old_value":"4","new_value":"5"}]},{"id":5202,"user":{"id":787,"name":"Villemagne J\u00e9r\u00f4me"},"notes":"TC agree this enhancement","created_on":"2015-04-10T08:26:14Z","details":[{"property":"attr","name":"status_id","old_value":"7","new_value":"9"},{"property":"attr","name":"assigned_to_id","old_value":"762","new_value":"383"}]},{"id":5382,"user":{"id":383,"name":"Blatti Yves"},"notes":"","created_on":"2015-05-15T15:27:54Z","details":[{"property":"attr","name":"status_id","old_value":"9","new_value":"2"}]},{"id":5475,"user":{"id":383,"name":"Blatti Yves"},"notes":"","created_on":"2015-06-02T08:24:37Z","details":[{"property":"attr","name":"done_ratio","old_value":"0","new_value":"50"}]},{"id":5518,"user":{"id":383,"name":"Blatti Yves"},"notes":"Testing has to be done with Indoor Navigation before merging","created_on":"2015-06-10T07:56:22Z","details":[{"property":"attr","name":"done_ratio","old_value":"50","new_value":"90"}]},{"id":5533,"user":{"id":383,"name":"Blatti Yves"},"notes":"","created_on":"2015-06-12T15:03:27Z","details":[{"property":"attr","name":"status_id","old_value":"2","new_value":"3"},{"property":"attr","name":"done_ratio","old_value":"90","new_value":"100"}]},{"id":5552,"user":{"id":383,"name":"Blatti Yves"},"notes":"","created_on":"2015-06-15T09:35:00Z","details":[{"property":"attr","name":"status_id","old_value":"3","new_value":"12"},{"property":"attr","name":"assigned_to_id","old_value":"383","new_value":"837"}]},{"id":5567,"user":{"id":23,"name":"Van Hoecke H\u00e9l\u00e8ne "},"notes":"","created_on":"2015-06-15T09:40:50Z","details":[{"property":"attr","name":"assigned_to_id","old_value":"837","new_value":"23"},{"property":"attr","name":"fixed_version_id","new_value":"176"}]},{"id":5576,"user":{"id":23,"name":"Van Hoecke H\u00e9l\u00e8ne "},"created_on":"2015-06-15T13:52:46Z","details":[{"property":"attr","name":"status_id","old_value":"12","new_value":"10"}]},{"id":5603,"user":{"id":23,"name":"Van Hoecke H\u00e9l\u00e8ne "},"created_on":"2015-06-15T13:54:35Z","details":[{"property":"attr","name":"assigned_to_id","old_value":"23"}]},{"id":5645,"user":{"id":787,"name":"Villemagne J\u00e9r\u00f4me"},"notes":"","created_on":"2015-06-17T10:00:29Z","details":[{"property":"relation","name":"relates","new_value":"959"}]}]}}