{"issue":{"id":1115,"project":{"id":16,"name":"easySDI"},"tracker":{"id":1,"name":"Defect"},"status":{"id":2,"name":"Affected"},"priority":{"id":5,"name":"High"},"author":{"id":3,"name":"Magoni Bruno"},"category":{"id":17,"name":"CATALOG"},"subject":"Constraint on resource's guid","description":"Seems that generating guid with php doesn't protect againt non unique identifier generation (encountered with Microsoft Operating System).\r\nSuch problem when creating a new resource's version implies that this one can have got a metadata guid which is already used by an already existing metadata. So one metadata can be attached to more than one resource's version (sic).\r\n\r\nTo prevent such error's case, adding unique constraint over the field which contains metadata guid could be a good option to keep database coherence. In addition, easySDI should verify such uniqueness without falling down. If generated guid is not unique than easySDI should generate other one until it is unique.\r\n\r\n","start_date":"2015-09-08","done_ratio":0,"custom_fields":[{"id":2,"name":"Affected version","value":"173"}],"created_on":"2015-09-08T09:32:20Z","updated_on":"2016-02-05T09:42:57Z","journals":[{"id":6777,"user":{"id":383,"name":"Blatti Yves"},"notes":"Hi Bruno !\r\n\r\nI faced a similar problem.\r\nI don't think that you have encountered an guid generation problem (you faced it multiple times, seems like statistically too much ...).\r\nMy optinion is that we have a problem with Joomla's (or component generator) session system.\r\nIf you open two resources or items, the second overwrites session data, and then when you save the first, it may use elements of the second (from session).\r\n\r\nDo you think this may be the same origin for you ?\r\n\r\nScenario:\r\n* Open the new resource form\r\n* Open another existing resource edit form\r\n* Save the first 'new' form","created_on":"2015-11-18T08:13:24Z","details":[{"property":"attr","name":"status_id","old_value":"1","new_value":"2"},{"property":"attr","name":"assigned_to_id","new_value":"3"}]},{"id":6811,"user":{"id":3,"name":"Magoni Bruno"},"notes":"Hi Yves,\r\n\r\nUnfortunately it's not the same origin you mention, as I encounter this problem again today without opening several resource's form.\r\n\r\nBruno","created_on":"2015-11-23T10:46:39Z","details":[{"property":"attr","name":"assigned_to_id","old_value":"3","new_value":"383"}]},{"id":6833,"user":{"id":383,"name":"Blatti Yves"},"notes":"Thanks for your reply, I'll open an issue for my case","created_on":"2015-11-30T10:50:57Z","details":[{"property":"attr","name":"assigned_to_id","old_value":"383","new_value":"3"}]},{"id":7153,"user":{"id":9,"name":"M\u00e9rour Xavier"},"notes":"Do we have any news on that defect ?","created_on":"2016-02-03T13:00:44Z","details":[]},{"id":7200,"user":{"id":3,"name":"Magoni Bruno"},"notes":"No more news as no one is able to reproduce such behaviour.\r\nI propose to treat such issue as an enhancement for preventing such error as described in summary...\r\n> _\"To prevent such error's case, adding unique constraint over the field which contains metadata guid could be a good option to keep database coherence. In addition, easySDI should verify such uniqueness without falling down. If generated guid is not unique than easySDI should generate other one until it is unique.\"_\r\n>","created_on":"2016-02-05T09:42:57Z","details":[{"property":"attr","name":"assigned_to_id","old_value":"3"}]}]}}