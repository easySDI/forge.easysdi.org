{"issue":{"id":311,"project":{"id":16,"name":"easySDI"},"tracker":{"id":2,"name":"Feature"},"status":{"id":1,"name":"New"},"priority":{"id":4,"name":"Normal"},"author":{"id":13,"name":"Baud R\u00e9my"},"category":{"id":21,"name":"MONITOR"},"subject":"Log serialization format enhancement for drawing graphs","description":"This is a performance issue about how the logs and aggLogs are serialized from the Monitor's servlet to Highcharts.\r\n\r\nFor info: we use in ExtJs a specific class called \"Ext.data.JsonStore\" in a restfull manner that permits an efficient high-level retrivial and edition of data. To use this nice feature, JS objects have to be serialized in the way that this class can read id. Here is how its done:\r\n\r\nExample for job's daily log:\r\n\r\n<pre><code>\r\n{\r\n   \"success\":true,\r\n   \"message\":\"Les logs ont bien \u00e9t\u00e9 r\u00e9cup\u00e9r\u00e9s\",\r\n   \"noPagingCount\":132,\r\n   \"data\":[\r\n            {\r\n             \"time\":\"2011-02-21 10:58:32\",\r\n             \"delay\":1.1390000581741333,\r\n             etc...\r\n            },{\r\n             \"time\":\"2011-02-21 10:53:32\",\r\n             \"delay\":1.6050000190734863,\r\n             etc...\r\n            }\r\n           ]\r\n}\r\n</code></pre>\r\n\r\n\r\nThe property success tells if the action has been performed successfully on the server side, and is used to display an error message if there was a problem. The column \"noPagingCount\" contains info about the pagination. The section data contains the logs values and we see here that each log object is serialized one after one.\r\n\r\n\r\nNow lets see how we feed these data into Highcharts to create graphs.:\r\n\r\nHere is how we can declare an Highcharts graph:\r\n\r\n<pre><code>\r\nseries: [{\r\n\t      serieName: 'time',\r\n\t      value: [2011-02-21 10:58:32, 2011-02-21 10:58:35, ...]\r\n\t},{\r\n              serieName: 'delay',\r\n              value: [1.605, 1.805, ...]\r\n        }]\r\n</code></pre>\r\n\r\nAs we can see here, there are no more log objects, but series of specific fields of the log collection. What we do to create the graph is polling over each log in the json store and add to the graph serie the \"time\" or \"delay\" value.\r\n\r\nIt would be far more efficient to retrieve directly the log series from the server.\r\n\r\nsomething like:\r\n\r\n<pre><code>\r\n{\r\n   \"success\":true,\r\n   \"message\":\"Les logs ont bien \u00e9t\u00e9 r\u00e9cup\u00e9r\u00e9s\",\r\n   \"noPagingCount\":132,\r\n   \"data\":[\r\n            {\r\n             \"serieName\": \"time\",\r\n             \"value\":[2011-02-21 10:58:32, 2011-02-21 10:58:35, ...],\r\n            },{\r\n             \"serieName\":\"delay\",\r\n             \"value\":[1.605, 1.805, ...],\r\n             etc...\r\n            }\r\n           ]\r\n}\r\n</code></pre>\r\n\r\nWhat to expect:\r\n+ less data overhead because column title are not repeated\r\n+ less computing time because we dont convert object's to series in js afterward\r\n\r\nImplementation:\r\nWe need the log collection like it is now because its used in maintainance. (delete raw logs..)\r\nThis feature could be achieved by making a new endpoint to retrieve log series or by making a different view of the log collection.\r\n\r\n ","start_date":"2011-02-21","done_ratio":0,"custom_fields":[{"id":3,"name":"Sponsor","multiple":true,"value":[]},{"id":4,"name":"Functional impact"},{"id":5,"name":"Ergonomic impact"}],"created_on":"2011-02-21T12:17:37Z","updated_on":"2014-06-24T11:20:29Z","journals":[{"id":999,"user":{"id":13,"name":"Baud R\u00e9my"},"notes":"","created_on":"2011-02-21T12:18:28Z","details":[{"property":"attr","name":"assigned_to_id","new_value":"13"}]},{"id":1765,"user":{"id":9,"name":"M\u00e9rour Xavier"},"notes":"","created_on":"2011-09-20T09:18:25Z","details":[{"property":"attr","name":"assigned_to_id","old_value":"13"}]},{"id":2835,"user":{"id":3,"name":"Magoni Bruno"},"notes":"","created_on":"2014-03-26T21:34:42Z","details":[{"property":"attr","name":"project_id","old_value":"10","new_value":"16"},{"property":"attr","name":"category_id","old_value":"10"},{"property":"attr","name":"fixed_version_id","old_value":"49"}]},{"id":3552,"user":{"id":3,"name":"Magoni Bruno"},"created_on":"2014-06-24T11:20:29Z","details":[{"property":"attr","name":"category_id","new_value":"21"}]}]}}