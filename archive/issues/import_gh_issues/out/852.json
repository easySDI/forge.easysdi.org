{"issue":{"id":852,"project":{"id":16,"name":"easySDI"},"tracker":{"id":1,"name":"Defect"},"status":{"id":10,"name":"Closed"},"priority":{"id":4,"name":"Normal"},"author":{"id":16,"name":"Portier Thomas"},"category":{"id":17,"name":"CATALOG"},"fixed_version":{"id":164,"name":"4.2.4"},"subject":"Values containing & are truncated","description":"When I edit a metadata and I fill a field with a & value, after saving, the value is truncated.\r\n\r\nexemple : \r\nIf I fill : http://localhost/geoserver/wms?service=WMS&request=gestCapabilities\r\nThe value saved is http://localhost/geoserver/wms?service=WMS\r\n\r\nI think I found a solution. In components\\com_easysdi_catalog\\controllers\\metadata.php on line 545\r\n\r\nI replaced $element->nodeValue = $value; by $element->nodeValue = htmlspecialchars($value);\r\n\r\nBefore commiting it, I would like to verify if this is the good way to fix the bug?\r\n\r\nWhat do you think?","start_date":"2014-10-31","done_ratio":100,"custom_fields":[{"id":2,"name":"Affected version","value":"159"}],"created_on":"2014-10-31T09:13:10Z","updated_on":"2015-09-18T15:22:42Z","closed_on":"2015-01-15T14:50:54Z","journals":[{"id":4232,"user":{"id":23,"name":"Van Hoecke H\u00e9l\u00e8ne "},"notes":"","created_on":"2014-11-03T07:44:52Z","details":[{"property":"attr","name":"fixed_version_id","old_value":"157"}]},{"id":4311,"user":{"id":3,"name":"Magoni Bruno"},"notes":"","created_on":"2014-11-14T08:40:54Z","details":[{"property":"relation","name":"relates","new_value":"778"}]},{"id":4313,"user":{"id":3,"name":"Magoni Bruno"},"notes":"A better way seems to read carefully PHP doc related to #778 before using encoding/decoding stuff...","created_on":"2014-11-14T08:44:54Z","details":[{"property":"attr","name":"assigned_to_id","old_value":"762","new_value":"761"}]},{"id":4327,"user":{"id":383,"name":"Blatti Yves"},"notes":"Just some inputs on this thing:\r\n\r\nA little test I made in the past for #778 (adapted), input is always 'foo&bar'\r\n\r\n<pre>\r\n<code class=\"php\">\r\n<?php\r\n//doc\r\n$doc  = new DOMDocument('1.0', 'utf-8');\r\n$doc->formatOutput = true;\r\n//root\r\n$root = $doc->createElementNS('http://da.ns', 'root');\r\n$doc->appendChild($root);\r\n$root->setAttributeNS('http://www.w3.org/2000/xmlns/' ,'xmlns:demo', 'http://foo.bar');\r\n\r\n\r\n$root->appendChild($doc->createComment('1) ------- createElementNS with value content : fails'));\r\n$item = $doc->createElementNS('http://foo.bar', 'demo:creatElement-OneLine', 'foo&bar');\r\n$root->appendChild($item);\r\n\r\n$root->appendChild($doc->createComment('2) ------- createElementNS with value content + htmlspecialchars : pass (Thomas proposal : php level)'));\r\n$item = $doc->createElementNS('http://foo.bar', 'demo:creatElement-OneLine', htmlspecialchars('foo&bar'));\r\n$root->appendChild($item);\r\n\r\n$root->appendChild($doc->createComment('3) ------- createElementNS then set nodeValue : fails'));\r\n$item2 = $doc->createElementNS('http://foo.bar', 'demo:creatElement-nodeValue');\r\n$item2->nodeValue = 'foo&bar';\r\n$root->appendChild($item2);\r\n\r\n$root->appendChild($doc->createComment('4) ------- createElementNS with createTextNode : pass (My preference : libXml level)'));\r\n$item3a = $doc->createElementNS('http://foo.bar', 'demo:creatElement-createTextNode');\r\n$item3b = $doc->createTextNode ('foo&bar');\r\n$item3a->appendChild($item3b);\r\n$root->appendChild($item3a);\r\n\r\n//look pretty in html\r\necho '<pre>';\r\necho htmlspecialchars($doc->saveXML());\r\necho '</pre>';\r\n?>\r\n</code>\r\n</pre>\r\n\r\noutputs:\r\n\r\n<pre>\r\n<code class=\"xml\">\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<root xmlns=\"http://da.ns\" xmlns:demo=\"http://foo.bar\">\r\n  <!--1) ------- createElementNS with value content : fails-->\r\n  <demo:creatElement-OneLine>foo</demo:creatElement-OneLine>\r\n  <!--2) ------- createElementNS with value content + htmlspecialchars : pass (Thomas proposal : php level)-->\r\n  <demo:creatElement-OneLine>foo&amp;bar</demo:creatElement-OneLine>\r\n  <!--3) ------- createElementNS then set nodeValue : fails-->\r\n  <demo:creatElement-nodeValue>foo</demo:creatElement-nodeValue>\r\n  <!--4) ------- createElementNS with createTextNode : pass (My preference : libXml level)-->\r\n  <demo:creatElement-createTextNode>foo&amp;bar</demo:creatElement-createTextNode>\r\n</root>\r\n</code>\r\n</pre>\r\n\r\nExplanations comes from PHP source code and libXML API:\r\n\r\nPHP's *createTextNode* uses libXML \"xmlNewDocText\":http://xmlsoft.org/html/libxml-tree.html#xmlNewDocNode\r\n(see PHP_FUNCTION(dom_document_create_text_node) \"here\":https://github.com/php/php-src/blob/d0cb715373c3fbe9dc095378ec5ed8c71f799f67/ext/dom/document.c#L771)\r\n\r\nbut PHP's *createElementNS* uses libXML \"xmlNewDocNode\":http://xmlsoft.org/html/libxml-tree.html#xmlNewDocNode\r\n(see PHP_FUNCTION(dom_document_create_element_ns) \"here\":https://github.com/php/php-src/blob/d0cb715373c3fbe9dc095378ec5ed8c71f799f67/ext/dom/document.c#L1051)\r\nlibXML API specifies :\r\n<pre>\r\nCreation of a new node element within a document. @ns and @content are optional (NULL).\r\nNOTE: @content is supposed to be a piece of XML CDATA, so it allow entities references, but XML special chars\r\nneed to be escaped first by using xmlEncodeEntitiesReentrant().[...]\r\n</pre>\r\n\r\nSo my personal preference would go to my example N\u00b04 using : createTextNode. But serious doc reading is still necessary ...\r\n\r\nREF: A (rejected) php bug, with some inputs : https://bugs.php.net/bug.php?id=31613#1106271770)\r\n\r\n","created_on":"2014-11-14T12:11:40Z","details":[]},{"id":4374,"user":{"id":3,"name":"Magoni Bruno"},"notes":"","created_on":"2014-12-12T10:14:43Z","details":[{"property":"relation","name":"relates","new_value":"878"}]},{"id":4533,"user":{"id":3,"name":"Magoni Bruno"},"created_on":"2014-12-12T16:07:09Z","details":[{"property":"cf","name":"2","old_value":"156","new_value":"159"}]},{"id":4556,"user":{"id":3,"name":"Magoni Bruno"},"notes":"","created_on":"2014-12-12T17:13:16Z","details":[{"property":"relation","name":"relates","old_value":"878"}]},{"id":4557,"user":{"id":3,"name":"Magoni Bruno"},"notes":"","created_on":"2014-12-12T17:13:18Z","details":[{"property":"relation","name":"blocks","new_value":"878"}]},{"id":4564,"user":{"id":3,"name":"Magoni Bruno"},"notes":"Reading doc and to have similar logical with #778 fix, I would suggest to use createTextNode method","created_on":"2014-12-12T17:24:44Z","details":[]},{"id":4614,"user":{"id":16,"name":"Portier Thomas"},"notes":"","created_on":"2014-12-19T17:21:31Z","details":[{"property":"attr","name":"status_id","old_value":"1","new_value":"2"},{"property":"attr","name":"assigned_to_id","old_value":"761","new_value":"16"},{"property":"attr","name":"fixed_version_id","new_value":"164"}]},{"id":4615,"user":{"id":16,"name":"Portier Thomas"},"notes":"","created_on":"2014-12-19T17:22:35Z","details":[{"property":"attr","name":"status_id","old_value":"2","new_value":"3"}]},{"id":4629,"user":{"id":23,"name":"Van Hoecke H\u00e9l\u00e8ne "},"created_on":"2015-01-06T11:03:24Z","details":[{"property":"attr","name":"done_ratio","old_value":"0","new_value":"100"}]},{"id":4655,"user":{"id":23,"name":"Van Hoecke H\u00e9l\u00e8ne "},"created_on":"2015-01-15T14:50:54Z","details":[{"property":"attr","name":"status_id","old_value":"3","new_value":"10"}]},{"id":6448,"user":{"id":23,"name":"Van Hoecke H\u00e9l\u00e8ne "},"created_on":"2015-09-18T15:22:42Z","details":[{"property":"attr","name":"assigned_to_id","old_value":"16"}]}]}}